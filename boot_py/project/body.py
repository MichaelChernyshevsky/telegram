import os

from dotenv import load_dotenv
from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext


load_dotenv()


async def start(update: Update, context: CallbackContext):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    menu_buttons = [
        ["üìä –ü—Ä–æ—Ñ–∏–ª—å", "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏"],
        ["‚Ñπ –ü–æ–º–æ—â—å", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"]
    ]
    
    reply_markup = ReplyKeyboardMarkup(
        menu_buttons, 
        resize_keyboard=True,  # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–º–µ—Ä
        one_time_keyboard=False  # –ú–µ–Ω—é –æ—Å—Ç–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    )
    
    await update.message.reply_text(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=reply_markup
    )

async def handle_menu_buttons(update: Update, context: CallbackContext):
    text = update.message.text
    if text == "üìä –ü—Ä–æ—Ñ–∏–ª—å":
        await update.message.reply_text("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å...")
    elif text == "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        await update.message.reply_text("–†–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    elif text == "‚Ñπ –ü–æ–º–æ—â—å":
        await update.message.reply_text("–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞...")
    elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text("–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: @support")




def main():

    token = os.getenv("BOT_TOKEN")
    if not token:
        raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ")


    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º Application –≤–º–µ—Å—Ç–æ Updater
    app = Application.builder().token(token).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT, handle_menu_buttons))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run_polling()
